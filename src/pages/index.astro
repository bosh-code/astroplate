---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Testimonial from "@/partials/Testimonial.astro";
import type { Button, Feature } from "@/types";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { FaCheck } from "react-icons/fa";

interface Homepage {
  banner: {
    title: string;
    content: string;
    image: string;
    button: Button;
  };
  features: Feature[];
}

const homepage = (await getEntry(
  "homepage",
  "-index",
)) as CollectionEntry<"homepage">;

const testimonial = (await getEntry(
  "testimonialSection",
  "testimonial",
)) as CollectionEntry<"testimonialSection">;

const call_to_action = (await getEntry(
  "ctaSection",
  "call-to-action",
)) as CollectionEntry<"ctaSection">;

const { banner, features } = homepage.data as Homepage;
---

<Base>
  <!-- Banner -->
  <section class="section pt-14">
    <div class="container">
      <div class="row justify-center">
        <div class="lg:col-7 md:col-9 mb-8 text-center">
          <h1 class="mb-4 text-h3 lg:text-h1">{markdownify(banner.title)}</h1>
          <p class="mb-8">{markdownify(banner.content)}</p>
          {
            banner.button.enable && (
              <a
                class="btn btn-primary"
                href={banner.button.link}
                target={
                  banner.button.link.startsWith("http") ? "_blank" : "_self"
                }
                rel="noopener"
              >
                {banner.button.label}
              </a>
            )
          }
        </div>
        {
          banner.image && (
            <div class="col-12">
              <ImageMod
                src={banner.image}
                height={380}
                width={1200}
                alt="banner"
                format="webp"
              />
            </div>
          )
        }
      </div>
    </div>
  </section>
  <!-- /Banner -->

  <!-- Features -->
  {
    features.map((feature, index: number) => (
      <section
        class:list={[`section-sm`, `${index % 2 === 0 && "bg-gradient"}`]}
      >
        <div class="container">
          <div class="row items-center justify-between">
            <div
              class:list={[
                `mb:md-0 mb-6 md:col-5`,
                `${index % 2 !== 0 && "md:order-2"}`,
              ]}
            >
              <ImageMod
                src={feature.image}
                height={480}
                width={520}
                alt={feature.title}
                format="webp"
              />
            </div>
            <div
              class:list={[
                `md:col-7 lg:col-6`,
                `${index % 2 !== 0 && "md:order-1"}`,
              ]}
            >
              <h2 class="mb-4">{markdownify(feature.title)}</h2>
              <p class="mb-8 text-lg">{markdownify(feature.content)}</p>
              <ul>
                {feature.bulletpoints.map((bullet: string) => (
                  <li class="relative mb-4 pl-6">
                    <FaCheck className={"absolute left-0 top-1.5"} />
                    <span>{markdownify(bullet)}</span>
                  </li>
                ))}
              </ul>
              {feature.button.enable && (
                <a class="btn btn-primary mt-5" href={feature.button.link}>
                  {feature.button.label}
                </a>
              )}
            </div>
          </div>
        </div>
      </section>
    ))
  }
  <!-- /Features -->

  <Testimonial testimonial={testimonial} />
  <CallToAction call_to_action={call_to_action} />
</Base>
